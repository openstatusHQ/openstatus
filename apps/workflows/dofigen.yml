ignore:
  - node_modules
  - /apps/docs
  - /apps/screenshot-service
  - /apps/server
  - /apps/web
  - /apps/dashboard
  - /apps/status-page
  - /packages/analytics
  - /packages/api
  - /packages/error
  - /packages/tracker
builders:
  install:
    fromImage: oven/bun:1.3.0
    workdir: /app/
    # Copy project
    bind:
      - bunfig.toml
      - package.json
      - apps/workflows/package.json
      - packages/assertions/package.json
      - packages/db/package.json
      - packages/emails/package.json
      - packages/notifications/discord/package.json
      - packages/notifications/email/package.json
      - packages/notifications/ntfy/package.json
      - packages/notifications/opsgenie/package.json
      - packages/notifications/pagerduty/package.json
      - packages/notifications/slack/package.json
      - packages/notifications/twillio-sms/package.json
      - packages/notifications/webhook/package.json
      - packages/regions/package.json
      - packages/utils/package.json
      - packages/tsconfig/package.json
      - packages/tinybird/package.json
      - packages/upstash/package.json
      - packages/theme-store/package.json
    # Install dependencies
    run: bun install --production  --frozen-lockfile --verbose
    cache:
      - /root/.bun/install/cache
  build:
    fromImage: oven/bun:1.3.0
    workdir: /app/apps/workflows
    copy:
      - . /app/
      - fromBuilder: install
        source: /app/node_modules
        target: /app/node_modules
      #  Should set env to production here
    # Compile the TypeScript application
    env:
      NODE_ENV: production
    run: bun build --compile --target bun  --sourcemap --format=cjs src/index.ts --outfile=app --external '@libsql/*' --external libsql

  docker:
    fromImage: oven/bun:1.3.1
    workdir: /app/apps/workflows
    copy:
     - . /app/
    run: bun run src/build-docker.ts

  libsql:
    fromImage: oven/bun:1.3.0
    workdir: /app/
    copy:
      - fromBuilder: docker
        source: /app/apps/build-docker/package.json
        target: /app/package.json
    run: bun install

  ca-certs:
    fromImage: debian:bullseye-slim
    run: apt update && apt install -y ca-certificates && update-ca-certificates

fromImage: debian:bullseye-slim
workdir: /app/
copy:
  - fromBuilder: build
    source: /app/apps/workflows/app
    target: /app/apps/workflows/
    chmod: "555"
  - fromBuilder: libsql
    source: /app/node_modules
    target: /app/packages/db/node_modules
  - fromBuilder: libsql
    source: /app/node_modules
    target: /app/node_modules
  - fromBuilder: ca-certs
    source: /etc/ssl/certs/ca-certificates.crt
    target: /etc/ssl/certs/
expose: 3000
entrypoint: /app/apps/workflows/app
