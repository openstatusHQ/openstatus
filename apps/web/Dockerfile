# syntax=docker/dockerfile:1.11
# This file is generated by Dofigen v2.4.1
# See https://github.com/lenra-io/dofigen

# install
FROM oven/bun@sha256:78f46b81b82d767ee8d729411f6f95089a403c21f17c20a5789df00263d7c5b5 AS install
WORKDIR /app/
RUN \
    --mount=type=bind,target=package.json,source=package.json \
    --mount=type=bind,target=apps/web/package.json,source=apps/web/package.json \
    --mount=type=bind,target=packages/analytics/package.json,source=packages/analytics/package.json \
    --mount=type=bind,target=packages/api/package.json,source=packages/api/package.json \
    --mount=type=bind,target=packages/assertions/package.json,source=packages/assertions/package.json \
    --mount=type=bind,target=packages/db/package.json,source=packages/db/package.json \
    --mount=type=bind,target=packages/emails/package.json,source=packages/emails/package.json \
    --mount=type=bind,target=packages/error/package.json,source=packages/error/package.json \
    --mount=type=bind,target=packages/header-analysis/package.json,source=packages/header-analysis/package.json \
    --mount=type=bind,target=packages/notifications/discord/package.json,source=packages/notifications/discord/package.json \
    --mount=type=bind,target=packages/notifications/email/package.json,source=packages/notifications/email/package.json \
    --mount=type=bind,target=packages/notifications/ntfy/package.json,source=packages/notifications/ntfy/package.json \
    --mount=type=bind,target=packages/notifications/opsgenie/package.json,source=packages/notifications/opsgenie/package.json \
    --mount=type=bind,target=packages/notifications/pagerduty/package.json,source=packages/notifications/pagerduty/package.json \
    --mount=type=bind,target=packages/notifications/slack/package.json,source=packages/notifications/slack/package.json \
    --mount=type=bind,target=packages/notifications/webhook/package.json,source=packages/notifications/webhook/package.json \
    --mount=type=bind,target=packages/react/package.json,source=packages/react/package.json \
    --mount=type=bind,target=packages/tinybird/package.json,source=packages/tinybird/package.json \
    --mount=type=bind,target=packages/tracker/package.json,source=packages/tracker/package.json \
    --mount=type=bind,target=packages/tsconfig/package.json,source=packages/tsconfig/package.json \
    --mount=type=bind,target=packages/ui/package.json,source=packages/ui/package.json \
    --mount=type=bind,target=packages/upstash/package.json,source=packages/upstash/package.json \
    --mount=type=bind,target=packages/utils/package.json,source=packages/utils/package.json \
    --mount=type=cache,target=/root/.bun/install/cache,sharing=locked \
    bun install --ignore-scripts --frozen-lockfile --verbose

# build
FROM oven/bun@sha256:78f46b81b82d767ee8d729411f6f95089a403c21f17c20a5789df00263d7c5b5 AS builder
WORKDIR /app
COPY \
    --link \
    "." "/app/"
COPY \
    --from=install \
    --link \
    "/app/node_modules" "/app/node_modules"
WORKDIR /app/apps/web
RUN bun run build

ENV NODE_ENV="production"

# runtime
FROM oven/bun@sha256:78f46b81b82d767ee8d729411f6f95089a403c21f17c20a5789df00263d7c5b5 AS runtime
RUN groupadd --system --gid 1001 nodejs
RUN useradd --system --uid 1001 --gid nodejs nextjs

WORKDIR /app

# Copy the public folder
COPY --from=builder /app/apps/web/public ./public

# Copy the standalone output
COPY --from=builder --chown=nextjs:nodejs /app/apps/web/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/web/.next/static ./.next/static

USER nextjs
EXPOSE 3000
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["bun", "apps/web/server.js"]
