services:
  #  External deps
    libsql:
        image: ghcr.io/tursodatabase/libsql-server:latest
        ports:
          - 8080:8080
          - 5001:5001
    tinybird-local-classic:
            image: tinybirdco/tinybird-local:latest
            container_name: tinybird-local-classic
            platform: linux/amd64
            ports:
              - "7181:7181"

            environment:
              - COMPATIBILITY_MODE=1

# our services
    internal-server:
        build:
         context: .
         dockerfile: apps/workflows/Dockerfile
        environment:
            - DATABASE_URL=http://libsql:8080
            - DATABASE_AUTH_TOKEN="basic:token"
            - RESEND_API_KEY=test
            - UPSTASH_REDIS_REST_URL=test
            - UPSTASH_REDIS_REST_TOKEN=test
            - NODE_ENV=production
            - GCP_PROJECT_ID=test
        extra_hosts:
          - "host.docker.internal:host-gateway"

        ports:
            - 3000:3000
        volumes:
            - type: bind
              source: ./data
              target: /app/data
        image: workflows-test
        command: .

    api:
        build:
         context: .
         dockerfile: apps/server/Dockerfile
        ports:
            - 3001:3000
        image: server
        environment:
            - DATABASE_URL=http://libsql-1:8080
            - DATABASE_AUTH_TOKEN="basic:token"
            - UPSTASH_REDIS_REST_URL=test
            - UPSTASH_REDIS_REST_TOKEN=test
            - NODE_ENV=production
            - NEXT_PUBLIC_OPENPANEL_CLIENT_ID=test
            - OPENPANEL_CLIENT_SECRET=test
            - RESEND_API_KEY=test
        command: .
    dashboard:
        build:
         context: ../..
         dockerfile: apps/dashboard/Dockerfile

        environment:
            - DATABASE_URL=http://host.docker.internal:8081
            - DATABASE_AUTH_TOKEN=test
            - RESEND_API_KEY=test
            - UPSTASH_REDIS_REST_URL=test
            - UPSTASH_REDIS_REST_TOKEN=test
            - NODE_ENV=production
            - GCP_PROJECT_ID=test
        extra_hosts:
          - "host.docker.internal:host-gateway"

        ports:
            - 3002:3000
        image: dashboard
    status-page:
        build:
         context: .
         dockerfile: apps/status-page/Dockerfile

        environment:
            - DATABASE_URL=http://host.docker.internal:8081
            - DATABASE_AUTH_TOKEN=test
            - RESEND_API_KEY=test
            - UPSTASH_REDIS_REST_URL=test
            - UPSTASH_REDIS_REST_TOKEN=test
            - NODE_ENV=production
            - GCP_PROJECT_ID=test
        extra_hosts:
          - "host.docker.internal:host-gateway"
        ports:
            - 3003:3000
        image: status-page
