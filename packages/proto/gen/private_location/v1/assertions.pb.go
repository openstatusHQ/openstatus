// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: private_location/v1/assertions.proto

package private_locationv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NumberComparator int32

const (
	NumberComparator_NUMBER_COMPARATOR_UNSPECIFIED           NumberComparator = 0
	NumberComparator_NUMBER_COMPARATOR_EQUAL                 NumberComparator = 1
	NumberComparator_NUMBER_COMPARATOR_NOT_EQUAL             NumberComparator = 2
	NumberComparator_NUMBER_COMPARATOR_GREATER_THAN          NumberComparator = 3
	NumberComparator_NUMBER_COMPARATOR_GREATER_THAN_OR_EQUAL NumberComparator = 4
	NumberComparator_NUMBER_COMPARATOR_LESS_THAN             NumberComparator = 5
	NumberComparator_NUMBER_COMPARATOR_LESS_THAN_OR_EQUAL    NumberComparator = 6
)

// Enum value maps for NumberComparator.
var (
	NumberComparator_name = map[int32]string{
		0: "NUMBER_COMPARATOR_UNSPECIFIED",
		1: "NUMBER_COMPARATOR_EQUAL",
		2: "NUMBER_COMPARATOR_NOT_EQUAL",
		3: "NUMBER_COMPARATOR_GREATER_THAN",
		4: "NUMBER_COMPARATOR_GREATER_THAN_OR_EQUAL",
		5: "NUMBER_COMPARATOR_LESS_THAN",
		6: "NUMBER_COMPARATOR_LESS_THAN_OR_EQUAL",
	}
	NumberComparator_value = map[string]int32{
		"NUMBER_COMPARATOR_UNSPECIFIED":           0,
		"NUMBER_COMPARATOR_EQUAL":                 1,
		"NUMBER_COMPARATOR_NOT_EQUAL":             2,
		"NUMBER_COMPARATOR_GREATER_THAN":          3,
		"NUMBER_COMPARATOR_GREATER_THAN_OR_EQUAL": 4,
		"NUMBER_COMPARATOR_LESS_THAN":             5,
		"NUMBER_COMPARATOR_LESS_THAN_OR_EQUAL":    6,
	}
)

func (x NumberComparator) Enum() *NumberComparator {
	p := new(NumberComparator)
	*p = x
	return p
}

func (x NumberComparator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NumberComparator) Descriptor() protoreflect.EnumDescriptor {
	return file_private_location_v1_assertions_proto_enumTypes[0].Descriptor()
}

func (NumberComparator) Type() protoreflect.EnumType {
	return &file_private_location_v1_assertions_proto_enumTypes[0]
}

func (x NumberComparator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NumberComparator.Descriptor instead.
func (NumberComparator) EnumDescriptor() ([]byte, []int) {
	return file_private_location_v1_assertions_proto_rawDescGZIP(), []int{0}
}

type StringComparator int32

const (
	StringComparator_STRING_COMPARATOR_UNSPECIFIED           StringComparator = 0
	StringComparator_STRING_COMPARATOR_CONTAINS              StringComparator = 1
	StringComparator_STRING_COMPARATOR_NOT_CONTAINS          StringComparator = 2
	StringComparator_STRING_COMPARATOR_EQUAL                 StringComparator = 3
	StringComparator_STRING_COMPARATOR_NOT_EQUAL             StringComparator = 4
	StringComparator_STRING_COMPARATOR_EMPTY                 StringComparator = 5
	StringComparator_STRING_COMPARATOR_NOT_EMPTY             StringComparator = 6
	StringComparator_STRING_COMPARATOR_GREATER_THAN          StringComparator = 7
	StringComparator_STRING_COMPARATOR_GREATER_THAN_OR_EQUAL StringComparator = 8
	StringComparator_STRING_COMPARATOR_LESS_THAN             StringComparator = 9
	StringComparator_STRING_COMPARATOR_LESS_THAN_OR_EQUAL    StringComparator = 10
)

// Enum value maps for StringComparator.
var (
	StringComparator_name = map[int32]string{
		0:  "STRING_COMPARATOR_UNSPECIFIED",
		1:  "STRING_COMPARATOR_CONTAINS",
		2:  "STRING_COMPARATOR_NOT_CONTAINS",
		3:  "STRING_COMPARATOR_EQUAL",
		4:  "STRING_COMPARATOR_NOT_EQUAL",
		5:  "STRING_COMPARATOR_EMPTY",
		6:  "STRING_COMPARATOR_NOT_EMPTY",
		7:  "STRING_COMPARATOR_GREATER_THAN",
		8:  "STRING_COMPARATOR_GREATER_THAN_OR_EQUAL",
		9:  "STRING_COMPARATOR_LESS_THAN",
		10: "STRING_COMPARATOR_LESS_THAN_OR_EQUAL",
	}
	StringComparator_value = map[string]int32{
		"STRING_COMPARATOR_UNSPECIFIED":           0,
		"STRING_COMPARATOR_CONTAINS":              1,
		"STRING_COMPARATOR_NOT_CONTAINS":          2,
		"STRING_COMPARATOR_EQUAL":                 3,
		"STRING_COMPARATOR_NOT_EQUAL":             4,
		"STRING_COMPARATOR_EMPTY":                 5,
		"STRING_COMPARATOR_NOT_EMPTY":             6,
		"STRING_COMPARATOR_GREATER_THAN":          7,
		"STRING_COMPARATOR_GREATER_THAN_OR_EQUAL": 8,
		"STRING_COMPARATOR_LESS_THAN":             9,
		"STRING_COMPARATOR_LESS_THAN_OR_EQUAL":    10,
	}
)

func (x StringComparator) Enum() *StringComparator {
	p := new(StringComparator)
	*p = x
	return p
}

func (x StringComparator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StringComparator) Descriptor() protoreflect.EnumDescriptor {
	return file_private_location_v1_assertions_proto_enumTypes[1].Descriptor()
}

func (StringComparator) Type() protoreflect.EnumType {
	return &file_private_location_v1_assertions_proto_enumTypes[1]
}

func (x StringComparator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StringComparator.Descriptor instead.
func (StringComparator) EnumDescriptor() ([]byte, []int) {
	return file_private_location_v1_assertions_proto_rawDescGZIP(), []int{1}
}

type StatusCodeAssertion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        int64                  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	Comparator    NumberComparator       `protobuf:"varint,2,opt,name=comparator,proto3,enum=private_location.v1.NumberComparator" json:"comparator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusCodeAssertion) Reset() {
	*x = StatusCodeAssertion{}
	mi := &file_private_location_v1_assertions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusCodeAssertion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusCodeAssertion) ProtoMessage() {}

func (x *StatusCodeAssertion) ProtoReflect() protoreflect.Message {
	mi := &file_private_location_v1_assertions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusCodeAssertion.ProtoReflect.Descriptor instead.
func (*StatusCodeAssertion) Descriptor() ([]byte, []int) {
	return file_private_location_v1_assertions_proto_rawDescGZIP(), []int{0}
}

func (x *StatusCodeAssertion) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *StatusCodeAssertion) GetComparator() NumberComparator {
	if x != nil {
		return x.Comparator
	}
	return NumberComparator_NUMBER_COMPARATOR_UNSPECIFIED
}

type BodyAssertion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        string                 `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Comparator    StringComparator       `protobuf:"varint,2,opt,name=comparator,proto3,enum=private_location.v1.StringComparator" json:"comparator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BodyAssertion) Reset() {
	*x = BodyAssertion{}
	mi := &file_private_location_v1_assertions_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BodyAssertion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyAssertion) ProtoMessage() {}

func (x *BodyAssertion) ProtoReflect() protoreflect.Message {
	mi := &file_private_location_v1_assertions_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyAssertion.ProtoReflect.Descriptor instead.
func (*BodyAssertion) Descriptor() ([]byte, []int) {
	return file_private_location_v1_assertions_proto_rawDescGZIP(), []int{1}
}

func (x *BodyAssertion) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *BodyAssertion) GetComparator() StringComparator {
	if x != nil {
		return x.Comparator
	}
	return StringComparator_STRING_COMPARATOR_UNSPECIFIED
}

type HeaderAssertion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        string                 `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Comparator    StringComparator       `protobuf:"varint,2,opt,name=comparator,proto3,enum=private_location.v1.StringComparator" json:"comparator,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderAssertion) Reset() {
	*x = HeaderAssertion{}
	mi := &file_private_location_v1_assertions_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderAssertion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderAssertion) ProtoMessage() {}

func (x *HeaderAssertion) ProtoReflect() protoreflect.Message {
	mi := &file_private_location_v1_assertions_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderAssertion.ProtoReflect.Descriptor instead.
func (*HeaderAssertion) Descriptor() ([]byte, []int) {
	return file_private_location_v1_assertions_proto_rawDescGZIP(), []int{2}
}

func (x *HeaderAssertion) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *HeaderAssertion) GetComparator() StringComparator {
	if x != nil {
		return x.Comparator
	}
	return StringComparator_STRING_COMPARATOR_UNSPECIFIED
}

func (x *HeaderAssertion) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_private_location_v1_assertions_proto protoreflect.FileDescriptor

const file_private_location_v1_assertions_proto_rawDesc = "" +
	"\n" +
	"$private_location/v1/assertions.proto\x12\x13private_location.v1\"t\n" +
	"\x13StatusCodeAssertion\x12\x16\n" +
	"\x06target\x18\x01 \x01(\x03R\x06target\x12E\n" +
	"\n" +
	"comparator\x18\x02 \x01(\x0e2%.private_location.v1.NumberComparatorR\n" +
	"comparator\"n\n" +
	"\rBodyAssertion\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12E\n" +
	"\n" +
	"comparator\x18\x02 \x01(\x0e2%.private_location.v1.StringComparatorR\n" +
	"comparator\"\x82\x01\n" +
	"\x0fHeaderAssertion\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12E\n" +
	"\n" +
	"comparator\x18\x02 \x01(\x0e2%.private_location.v1.StringComparatorR\n" +
	"comparator\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key*\x8f\x02\n" +
	"\x10NumberComparator\x12!\n" +
	"\x1dNUMBER_COMPARATOR_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17NUMBER_COMPARATOR_EQUAL\x10\x01\x12\x1f\n" +
	"\x1bNUMBER_COMPARATOR_NOT_EQUAL\x10\x02\x12\"\n" +
	"\x1eNUMBER_COMPARATOR_GREATER_THAN\x10\x03\x12+\n" +
	"'NUMBER_COMPARATOR_GREATER_THAN_OR_EQUAL\x10\x04\x12\x1f\n" +
	"\x1bNUMBER_COMPARATOR_LESS_THAN\x10\x05\x12(\n" +
	"$NUMBER_COMPARATOR_LESS_THAN_OR_EQUAL\x10\x06*\x91\x03\n" +
	"\x10StringComparator\x12!\n" +
	"\x1dSTRING_COMPARATOR_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aSTRING_COMPARATOR_CONTAINS\x10\x01\x12\"\n" +
	"\x1eSTRING_COMPARATOR_NOT_CONTAINS\x10\x02\x12\x1b\n" +
	"\x17STRING_COMPARATOR_EQUAL\x10\x03\x12\x1f\n" +
	"\x1bSTRING_COMPARATOR_NOT_EQUAL\x10\x04\x12\x1b\n" +
	"\x17STRING_COMPARATOR_EMPTY\x10\x05\x12\x1f\n" +
	"\x1bSTRING_COMPARATOR_NOT_EMPTY\x10\x06\x12\"\n" +
	"\x1eSTRING_COMPARATOR_GREATER_THAN\x10\a\x12+\n" +
	"'STRING_COMPARATOR_GREATER_THAN_OR_EQUAL\x10\b\x12\x1f\n" +
	"\x1bSTRING_COMPARATOR_LESS_THAN\x10\t\x12(\n" +
	"$STRING_COMPARATOR_LESS_THAN_OR_EQUAL\x10\n" +
	"B\xf1\x01\n" +
	"\x17com.private_location.v1B\x0fAssertionsProtoP\x01Z\\github.com/openstatushq/openstatus/packages/proto/gen/private_location/v1;private_locationv1\xa2\x02\x03PXX\xaa\x02\x12PrivateLocation.V1\xca\x02\x12PrivateLocation\\V1\xe2\x02\x1ePrivateLocation\\V1\\GPBMetadata\xea\x02\x13PrivateLocation::V1b\x06proto3"

var (
	file_private_location_v1_assertions_proto_rawDescOnce sync.Once
	file_private_location_v1_assertions_proto_rawDescData []byte
)

func file_private_location_v1_assertions_proto_rawDescGZIP() []byte {
	file_private_location_v1_assertions_proto_rawDescOnce.Do(func() {
		file_private_location_v1_assertions_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_private_location_v1_assertions_proto_rawDesc), len(file_private_location_v1_assertions_proto_rawDesc)))
	})
	return file_private_location_v1_assertions_proto_rawDescData
}

var file_private_location_v1_assertions_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_private_location_v1_assertions_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_private_location_v1_assertions_proto_goTypes = []any{
	(NumberComparator)(0),       // 0: private_location.v1.NumberComparator
	(StringComparator)(0),       // 1: private_location.v1.StringComparator
	(*StatusCodeAssertion)(nil), // 2: private_location.v1.StatusCodeAssertion
	(*BodyAssertion)(nil),       // 3: private_location.v1.BodyAssertion
	(*HeaderAssertion)(nil),     // 4: private_location.v1.HeaderAssertion
}
var file_private_location_v1_assertions_proto_depIdxs = []int32{
	0, // 0: private_location.v1.StatusCodeAssertion.comparator:type_name -> private_location.v1.NumberComparator
	1, // 1: private_location.v1.BodyAssertion.comparator:type_name -> private_location.v1.StringComparator
	1, // 2: private_location.v1.HeaderAssertion.comparator:type_name -> private_location.v1.StringComparator
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_private_location_v1_assertions_proto_init() }
func file_private_location_v1_assertions_proto_init() {
	if File_private_location_v1_assertions_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_private_location_v1_assertions_proto_rawDesc), len(file_private_location_v1_assertions_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_private_location_v1_assertions_proto_goTypes,
		DependencyIndexes: file_private_location_v1_assertions_proto_depIdxs,
		EnumInfos:         file_private_location_v1_assertions_proto_enumTypes,
		MessageInfos:      file_private_location_v1_assertions_proto_msgTypes,
	}.Build()
	File_private_location_v1_assertions_proto = out.File
	file_private_location_v1_assertions_proto_goTypes = nil
	file_private_location_v1_assertions_proto_depIdxs = nil
}
